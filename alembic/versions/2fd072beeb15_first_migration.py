"""First migration

Revision ID: 2fd072beeb15
Revises:
Create Date: 2022-12-23 21:32:55.759241

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "2fd072beeb15"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "shift",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sequence_number", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=50), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("finished_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("final_message", sa.String(length=255), nullable=False),
        sa.Column("tasks", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "status",
            sa.Enum("preparing", "started", "finished", name="statusshift"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("shift", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_shift_final_message"), ["final_message"], unique=False)

    op.create_table(
        "task",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("ulr", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("surname", sa.String(length=100), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=False),
        sa.Column("phone_number", sa.String(length=13), nullable=False),
        sa.Column("telegram_id", sa.String(length=64), nullable=False),
        sa.Column(
            "status",
            sa.Enum("pending", "verified", "declined", name="statususer"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_city"), ["city"], unique=False)
        batch_op.create_index(batch_op.f("ix_user_name"), ["name"], unique=False)
        batch_op.create_index(batch_op.f("ix_user_phone_number"), ["phone_number"], unique=True)
        batch_op.create_index(batch_op.f("ix_user_surname"), ["surname"], unique=False)
        batch_op.create_index(batch_op.f("ix_user_telegram_id"), ["telegram_id"], unique=True)

    op.create_table(
        "member",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("shift_id", sa.Integer(), nullable=True),
        sa.Column("numbers_lombaryers", sa.Integer(), nullable=True),
        sa.Column("status", sa.Enum("active", "excluded", name="statusmember"), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["shift_id"],
            ["shift.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "request",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("shift_id", sa.Integer(), nullable=True),
        sa.Column("attempt_number", sa.Integer(), nullable=True),
        sa.Column("status", sa.Enum("active", "excluded", name="statusmember"), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["shift_id"],
            ["shift.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "report",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=True),
        sa.Column("shift_id", sa.Integer(), nullable=True),
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("task_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("report_url", sa.String(length=255), nullable=True),
        sa.Column("uploaded_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("attempt_number", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("waiting", "reviewing", "approved", "declined", name="statusreport"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["member.id"],
        ),
        sa.ForeignKeyConstraint(
            ["shift_id"],
            ["shift.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("report")
    op.drop_table("request")
    op.drop_table("member")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_telegram_id"))
        batch_op.drop_index(batch_op.f("ix_user_surname"))
        batch_op.drop_index(batch_op.f("ix_user_phone_number"))
        batch_op.drop_index(batch_op.f("ix_user_name"))
        batch_op.drop_index(batch_op.f("ix_user_city"))

    op.drop_table("user")
    op.drop_table("task")
    with op.batch_alter_table("shift", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_shift_final_message"))

    op.drop_table("shift")
    # ### end Alembic commands ###
