version: '3.8'


services:
  db-local:
    image: postgres:14.5-alpine  #    image: postgis/postgis:14-3.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      timeout: 10s
      interval: 1s
      retries: 10
    ports:
      - "127.0.0.1:5432:5432"

  bot-local:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["poetry", "run", "runbot"]
    restart: always
    depends_on:
      db-local:
        condition: service_healthy
    env_file:
      - ./.env

  web-local:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "--access-logfile=-", "manage:app"]
    restart: always
    depends_on:
      bot-local:
        condition: service_started
      db-local:
        condition: service_healthy
    env_file:
      - ./.env
    expose:
      - 5000

  nginx:
    image: nginx:1.23.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web-local


volumes:
  postgres_data:
